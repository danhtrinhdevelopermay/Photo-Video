name: Android Build and Test

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build APK and Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # Step 1: Code Analysis - Lint Check
    - name: Run Lint Analysis
      run: ./gradlew lintDebug --continue
      continue-on-error: true
      
    # Step 2: Unit Tests
    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest --continue
      continue-on-error: true
      
    # Step 3: Build Debug APK
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    # Step 4: Build Release APK (if on main branch)
    - name: Build Release APK
      if: github.ref == 'refs/heads/main'
      run: ./gradlew assembleRelease
      
    # Upload artifacts
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      if: github.ref == 'refs/heads/main' && success()
      with:
        name: release-apk
        path: app/build/outputs/apk/release/app-release.apk
        
    # Upload test and analysis reports
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          app/build/reports/tests/testDebugUnitTest/
          app/build/reports/lint-results-debug.html
          
    # Display build results
    - name: Display Build Status
      if: always()
      run: |
        echo "=== BUILD SUMMARY ==="
        echo "‚úÖ Code checkout completed"
        echo "‚úÖ JDK 17 setup completed"
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "‚úÖ Debug APK built successfully"
          ls -lh app/build/outputs/apk/debug/app-debug.apk
        else
          echo "‚ùå Debug APK build failed"
        fi
        if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
          echo "‚úÖ Release APK built successfully"
          ls -lh app/build/outputs/apk/release/app-release.apk
        fi
        echo "üìä Check the test reports in artifacts for detailed results"